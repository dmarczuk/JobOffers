spring:
  main:
    allow-bean-definition-overriding: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:63792}
  cache:
    type: redis
    redis:
      time-to-live: PT60M

  data:
    mongodb:
#      uri: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB_NAME} # ?authSource=${MONGO_AUTH_SOURCE}
      uri: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB_NAME}?authSource=${MONGO_AUTH_SOURCE}
#      uri: mongodb://admin:admin@localhost:27017/job-offers
      auto-index-creation: true
      authentication-database: admin
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

joboffers:
  offer:
    scheduler:
      delayTime: "* * */3 * * *"
    http:
      client:
        config:
          uri: http://ec2-3-120-147-150.eu-central-1.compute.amazonaws.com
          port: 5057
          connectTimeout: 5000
          readTimeout: 5000

scheduling:
  enabled: true


auth:
  jwt:
    expirationDays: 30
    secret: ${JWT_SECRET}
    issuer: job-offers-backend


#MONGO_USER: admin
#MONGO_PASSWORD: admin
#MONGO_HOST: localhost
#MONGO_PORT: 27017
#MONGO_DB_NAME: job-offers